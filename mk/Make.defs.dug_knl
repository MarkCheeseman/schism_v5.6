################################################################################
# Parallel SCHISM Makefile
#
# User makes environment settings for particular OS / PLATFORM / COMPILER / MPI
# below as well as setting flags having to do with included algorithms (e.g. sediment)
# and the compiler configuration (debug, timing). 
#
# The environment settings are based on the following options.
#
# Compiler name:
#   FCS: Serial compiler (for utilities)
#   FCP: Parallel compiler
#   FLD: Linker (in general same as parallel compiler)
#
# Compilation flags
#   FCSFLAGS: Flags for serial compilation
#   FCPFLAGS: Flags for parallel compilation (including all pre-processing flags)
#   FLDFLAGS: Flags for linker (e.g., -O2)
#
# Preprocessor flags:
#   DEBUG: Enable debugging code
#   ORDERED_SUM: Enable globally ordered sums & dot-products for bit reproducibility
#     of state quantities independent of number of processors (note: this can
#     significantly degrade performance);
#   INCLUDE_TIMING: Enable wallclock timing of code (note: this can have slight
#     effect on performance);
#   MPI_VERSION = 1 or 2: Version of MPI (try 2 first, if compile fails due to mpi
#     related errors then switch to version 1;
#
# Libraries (needed for parallel code)
#   MTSLIBS: Flags for linking ParMeTiS/MeTiS libaries
################################################################################

################################################################################
## Environment for DUG Technology/Knights Landing 
#################################################################################
ENV = DUG_KNL

################################################################################
# Alternate executable name if you do not want the default. 
################################################################################
EXEC   := pschism_$(ENV)

################################################################################
# COMPILERS
################################################################################

FCP = mpif90
FCS = ifort
FLD = $(FCP)
PPFLAGS := $(PPFLAGS) -DMPIVERSION=2 

#OPT_FLAGS = -Ofast -align array64byte -no-prec-sqrt -fast-transcendentals -qopt-prefetch=2 -xKNL -mkl
OPT_FLAGS = -O5 -init=zero,arrays -xKNL -unroll-aggressive -align array64byte -qopt-prefetch=2 -mkl

# Hybrid (MPI + OpenMP)
OMP_FLAGS = -qopenmp -qoverride-limits
#OMP_FLAGS = 
FCPFLAGS = $(PPFLAGS) $(OPT_FLAGS) -Bstatic -assume byterecl $(OMP_FLAGS) 
FLDFLAGS = $(OPT_FLAGS) -mcmodel=medium -shared-intel $(OMP_FLAGS)   #for final linking of object files

#EXEC := $(EXEC)_OMP

#Libraries
MTSLIBS = -L/p9/mcc_slwce/schism/v5.6.0/src/ParMetis-3.1-Sep2010 -lparmetis -lmetis
CDFLIBS = -L${NETCDF_DIR}/lib -lnetcdf -lnetcdff
CDFMOD = -I${NETCDF_DIR}/include # modules for netcdf

################################################################################
# Algorithm preference flags.
# Comment out unwanted modules and flags.
################################################################################

# -DSCHISM is always on and is defined elsewhere

include ../mk/include_modules

# Don't comment out the follow ifdef
ifdef USE_GOTM
  GTMMOD =  -I/home3/yjzhang/GOTM_Intel64/modules/IFORT/ #modules
  GTMLIBS = -L/home3/yjzhang/GOTM_Intel64/lib/IFORT/ -lturbulence_prod -lutil_prod
else
  GTMMOD =
  GTMLIBS =
endif


######### Specialty compiler flags and workarounds
# Add -DNO_TR_15581 like below for allocatable array problem in sflux_subs.F90
# PPFLAGS := $(PPFLAGS) -DNO_TR_15581

# Obsolete flags: use USE_WRAP flag to avoid problems in ParMetis lib (calling C from FORTRAN)
# PPFLAGS := $(PPFLAGS) -DUSE_WRAP 

